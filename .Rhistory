profiles[,2]
profiles[,1]
profiles[2]
str(profiles)
profiles[[1]][1]
profiles[[1]][,1]
str(profiles)
plot(profiles[[1]][,1],profiles[[1]][,2])
plot(profiles[[1]][,1],profiles[[1]][,2],type="l")
pattern<-isopattern(
isotopes,
"C11H12N2O2",
threshold=0.1,
plotit=TRUE,
charge=FALSE,
emass=0.00054858,
algo=2
)
plot(profiles[[1]][,1],profiles[[1]][,2],type="l")
profiles<-envelope(
pattern,
ppm=FALSE,
dmz=0.0001,
frac=1/4,
env="Gaussian",
resolution=1E4,
plotit=TRUE
)
plot(profiles[[1]][,1],profiles[[1]][,2],type="l")
profiles<-envelope(
pattern,
ppm=FALSE,
dmz=0.0001,
frac=1/4,
env="Gaussian",
resolution=1E6,
plotit=TRUE
)
plot(profiles[[1]][,1],profiles[[1]][,2],type="l")
plot(profiles[[1]][,1],profiles[[1]][,2],type="l",xlim=c(205,205.2))
plot(profiles[[1]][,1],profiles[[1]][,2],type="l",xlim=c(205.04,205.1))
plot(profiles[[1]][,1],profiles[[1]][,2],type="l",xlim=c(205.07,205.1))
plot(profiles[[1]][,1],profiles[[1]][,2],type="l",xlim=c(205.08,205.1))
plot(profiles[[1]][,1],profiles[[1]][,2],type="l",xlim=c(205.08,205.1),ylim=c(0,20))
plot(profiles[[1]][,1],profiles[[1]][,2],type="l",xlim=c(205.08,205.1),ylim=c(0,15))
(64*1000)/3
hist(c(1,2,3,4,NA))
density(c(1,2,3,4,NA))
density(c(1,2,3,4))
density(c(1,2,3,4,NA))
?density
density(c(1,2,3,4,NA),na.rm=T)
plot(density(c(1,2,3,4,NA),na.rm=T))
var.test
?var.test
setwd("C:/Users/jan/Desktop/temp/daniela/new2")
library("xlsx")
library("nortest")
#import csv file with missing values
data=read.csv2("milkST_for_common-paper_ver5_NA.csv", header = TRUE, sep = ";", quote = "\"",
dec = ",", fill = TRUE, comment.char = "")
# header of data
head(data)
# key parameters of variables (FA)
FA<-data[,11:46]
summary(data)
summary_FA=summary(data)[,1:46]
write.xlsx(summary_FA,"summary_FA.xlsx")
# key parameters of variables regarding geographical origin
regions_unique=as.character(unique(data$region))
summary_all=data.frame()
for (i in 1:6){
for (i2 in 1:length(regions_unique)){
for (i3 in 11:ncol(data)){
summary = summary(data[data$region==regions_unique[i2],i3])
summary = as.matrix(summary)
summary_names=rownames(summary)
summary_all[i2,i3-10]= summary[i]
}
}
colnames(summary_all)=colnames(data)[11:ncol(data)]
rownames(summary_all)=regions_unique
write.xlsx2(summary_all,"milkST-for common paper_vers5/data_summary_region.xlsx", sheetName=summary_names[i],append=if(i>1){T}else{F})
}
summary_all
# key parameters of variables regarding geographical origin
regions_unique=as.character(unique(data$region))
summary_all=data.frame()
for (i in 1:6){
for (i2 in 1:length(regions_unique)){
for (i3 in 11:ncol(data)){
summary = summary(data[data$region==regions_unique[i2],i3])
summary = as.matrix(summary)
summary_names=rownames(summary)
summary_all[i2,i3-10]= summary[i]
}
}
colnames(summary_all)=colnames(data)[11:ncol(data)]
rownames(summary_all)=regions_unique
write.xlsx2(summary_all,"milkST-for common paper_vers5/data_summary_region.xlsx", sheetName=summary_names[i],append=if(i>1){T}else{F})
}
# key parameters of variables regarding milk treatment
treatment_unique=as.character(unique(data$milk.treatment))
summary_all=data.frame()
for (i in 1:6){
for (i2 in 1:length(treatment_unique)){
for (i3 in 11:ncol(data)){
summary = summary(data[data$milk.treatment==treatment_unique[i2],i3])
summary = as.matrix(summary)
summary_names=rownames(summary)
summary_all[i2,i3-10]= summary[i]
}
}
colnames(summary_all)=colnames(data)[11:ncol(data)]
rownames(summary_all)=treatment_unique
write.xlsx2(summary_all,"milkST-for common paper_vers5/data_summary_treatment.xlsx", sheetName=summary_names[i],append=if(i>1){T}else{F})
}
# key parameters of variables regarding season
season_unique=as.character(unique(data$season))
summary_all=data.frame()
for (i in 1:6){
for (i2 in 1:length(season_unique)){
for (i3 in 11:ncol(data)){
summary = summary(data[data$season==season_unique[i2],i3])
summary = as.matrix(summary)
summary_names=rownames(summary)
summary_all[i2,i3-10]= summary[i]
}
}
colnames(summary_all)=colnames(data)[11:ncol(data)]
rownames(summary_all)=season_unique
write.xlsx2(summary_all,"milkST-for common paper_vers5/data_summary_season.xlsx", sheetName=summary_names[i],append=if(i>1){T}else{F})
}
# Boxplot with stripchart of variables regarding region
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/boxplot_region/",colnames[i3],"_region.png",sep="")   , width=800,height=600)
boxplot(data[,i3]~data$region,xlab="Region",ylab=colnames[i3],outpch = NA,las=1,main=colnames[i3],col="yellow")
stripchart(data[,i3]~data$region,method = "jitter",vertical=TRUE,col="red",pch=21,add=TRUE)
dev.off()
}
# Boxplot with stripchart of variables regarding region
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/boxplot_region/",colnames[i3],"_region.png",sep="")   , width=800,height=600)
boxplot(data[,i3]~data$region,xlab="Region",ylab=colnames[i3],outpch = NA,las=1,main=colnames[i3],col="yellow")
stripchart(data[,i3]~data$region,method = "jitter",vertical=TRUE,col="red",pch=21,add=TRUE)
dev.off()
}
# Boxplot with stripchart of variables regarding region
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/boxplot_region/",colnames[i3],"_region.png",sep="")   , width=800,height=600)
boxplot(data[,i3]~data$region,xlab="Region",ylab=colnames[i3],outpch = NA,las=1,main=colnames[i3],col="yellow")
stripchart(data[,i3]~data$region,method = "jitter",vertical=TRUE,col="red",pch=21,add=TRUE)
dev.off()
}
# Boxplot with stripchart of variables regarding milk treatment
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/boxplot_treatment/",colnames[i3],"_treatment.png",sep="")   , width=800,height=600)
boxplot(data[,i3]~data$milk.treatment,xlab="Milk treatment",ylab=colnames[i3],outpch = NA,las=1,main=colnames[i3],col="yellow")
stripchart(data[,i3]~data$milk.treatment,method = "jitter",vertical=TRUE,col="red",pch=21,add=TRUE)
dev.off()
}
# Boxplot with stripchart of variables regarding milk treatment
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/boxplot_treatment/",colnames[i3],"_treatment.png",sep="")   , width=800,height=600)
boxplot(data[,i3]~data$milk.treatment,xlab="Milk treatment",ylab=colnames[i3],outpch = NA,las=1,main=colnames[i3],col="yellow")
stripchart(data[,i3]~data$milk.treatment,method = "jitter",vertical=TRUE,col="red",pch=21,add=TRUE)
dev.off()
}
# Boxplot with stripchart of variables regarding milk treatment
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/boxplot_season/",colnames[i3],"_season.png",sep="")   , width=800,height=600)
boxplot(data[,i3]~data$season,xlab="Season",ylab=colnames[i3],outpch = NA,las=1,main=colnames[i3],col="yellow")
stripchart(data[,i3]~data$season,method = "jitter",vertical=TRUE,col="red",pch=21,add=TRUE)
dev.off()
}
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/boxplot_season/",colnames[i3],"_season.png",sep="")   , width=800,height=600)
boxplot(data[,i3]~data$season,xlab="Season",ylab=colnames[i3],outpch = NA,las=1,main=colnames[i3],col="yellow")
stripchart(data[,i3]~data$season,method = "jitter",vertical=TRUE,col="red",pch=21,add=TRUE)
dev.off()
}
# Graph for means with confidence interval
# install.packages("gplots")
library(gplots)
# Graph for means with confidence interval of variables regarding region
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/confidence interval of means_region/",colnames[i3],"_region.png",sep="")   , width=800,height=600)
plotmeans(data[,i3]~data$region,xlab="Region",ylab=colnames[i3],las=1,main=colnames[i3],col="red")
dev.off()
}
# Graph for means with confidence interval of variables regarding milk treatment
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/confidence interval of means_treatment/",colnames[i3],"_treatment.png",sep="")   , width=800,height=600)
plotmeans(data[,i3]~data$milk.treatment,xlab="Milk treatment",ylab=colnames[i3],las=1,main=colnames[i3],col="red")
dev.off()
}
# Graph for means with confidence interval of variables regarding milk treatment
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/confidence interval of means_season/",colnames[i3],"_season.png",sep="")   , width=800,height=600)
plotmeans(data[,i3]~data$season,xlab="Season",ylab=colnames[i3],las=1,main=colnames[i3],col="red")
dev.off()
}
# density-histograms
# Histogram of variables
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/histogram/",colnames[i3],"_FA.png",sep="")   , width=800,height=600)
hist(data[,i3],xlab=colnames[i3],ylab="density",las=1,main=colnames[i3],col="lightgreen", freq=FALSE)
abline(v=mean(data[,i3]), col="blue")
lines(density(data[,i3]), lwd=1.5,col="red")
dev.off()
}
colnames=colnames(data)
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/histogram/",colnames[i3],"_FA.png",sep="")   , width=800,height=600)
hist(data[,i3],xlab=colnames[i3],ylab="density",las=1,main=colnames[i3],col="lightgreen", freq=FALSE)
abline(v=mean(data[,i3]), col="blue")
lines(density(data[,i3],na.rm=TRUE), lwd=1.5,col="red")
dev.off()
}
# more plots in one image
# histograms of variables regarding region
colnames=colnames(data)
regions_unique=as.character(unique(data$region))
for (i2 in 1:length(regions_unique)){
for (i3 in 11:ncol(data)){
png(file = paste("milkST-for common paper_vers5/plots/histogram/histo_region/",colnames[i3],"_region.png",sep="")   , width=800,height=600)
par(mfrow=c(3,2))
hist(data[data$region==regions_unique[i2],i3],xlab=regions_unique,ylab=colnames[i3],las=1,main=colnames[i3],col="lightgreen", freq=FALSE)
dev.off()
}
}
##do a loop for all variables eith saving images
#region
par(mfrow=c(3,2))
hist(data$C6.0[data$region=="Pusteria"],xlab="C6.0",ylab="density",las=1,main="Pusteria",col="lightgreen", freq=FALSE,ylim=c(0,4), xlim=c(1,4),xaxp=c(1,4,15), breaks=10)
hist(data$C6.0[data$region=="Isarco"],xlab="C6.0",ylab="density",las=1,main="Isarco",col="lightgreen", freq=FALSE,ylim=c(0,4), xlim=c(1,4),breaks=10)
hist(data$C6.0[data$region=="Bolzano"],xlab="C6.0",ylab="density",las=1,main="Bolzano",col="lightgreen", freq=FALSE,ylim=c(0,4), xlim=c(1,4),breaks=10)
hist(data$C6.0[data$region=="Merano"],xlab="C6.0",ylab="density",las=1,main="Merano",col="lightgreen", freq=FALSE,ylim=c(0,4), xlim=c(1,4),breaks=10)
hist(data$C6.0[data$region=="Venosta"],xlab="C6.0",ylab="density",las=1,main="Venosta",col="lightgreen", freq=FALSE,ylim=c(0,4), xlim=c(1,4),breaks=10)
hist(data$C6.0[data$region==""],xlab="C6.0",ylab="density",las=1,main="MILA",col="lightgreen", freq=FALSE,ylim=c(0,4), xlim=c(1,4),breaks=10)
#milk treatment
par(mfrow=c(1,2))
hist(data$C6.0[data$milk.treatment=="pasteurized"],xlab="C6.0",ylab="density",las=1,main="pasteurized",col="lightgreen", freq=FALSE,ylim=c(0,3), xlim=c(1,3),xaxp=c(1,4,15), breaks=10)
hist(data$C6.0[data$milk.treatment=="raw milk"],xlab="C6.0",ylab="density",las=1,main="raw milk",col="lightgreen", freq=FALSE,ylim=c(0,3), xlim=c(1,3),breaks=10)
#season
par(mfrow=c(2,2))
hist(data$C6.0[data$season=="spring"],xlab="C6.0",ylab="density",las=1,main="spring",col="lightgreen", freq=FALSE,ylim=c(0,6), xlim=c(1,3),xaxp=c(1,4,15), breaks=10)
hist(data$C6.0[data$season=="summer"],xlab="C6.0",ylab="density",las=1,main="summer",col="lightgreen", freq=FALSE,ylim=c(0,6), xlim=c(1,3),breaks=10)
hist(data$C6.0[data$season=="autumn"],xlab="C6.0",ylab="density",las=1,main="autumn",col="lightgreen", freq=FALSE,ylim=c(0,6), xlim=c(1,3),breaks=10)
hist(data$C6.0[data$season=="winter"],xlab="C6.0",ylab="density",las=1,main="winter",col="lightgreen", freq=FALSE,ylim=c(0,6), xlim=c(1,3),breaks=10)
regions_unique=as.character(unique(data$region))
shapiro_all=data.frame()
for (i2 in 1:length(regions_unique)){
for (i3 in 11:ncol(data)){
temp = shapiro.test(         data[data$region==regions_unique[i2],i3]          )
shapiro_all[i2,i3-10] = temp$p.value
}
}
colnames(shapiro_all)=colnames(data)[11:ncol(data)]
rownames(shapiro_all)=regions_unique
write.xlsx2(shapiro_all,"milkST-for common paper_vers5/shapiro_region.xlsx")
regions_unique=as.character(unique(data$region))
regions_unique
data$region
regions_unique=as.character(unique(data$region))
variance_test_regions = matrix(ncol = length(regions_unique), nrow = length(regions_unique))
regions_unique=as.character(unique(data$region))
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
variance_test_regions
compounds=colnames(data)[11:ncol(data)]
compounds
regions_unique=as.character(unique(data$region))
compounds=colnames(data)[11:ncol(data)]
for (i in 11:ncol(data)){
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
for (i2 in 1:length(regions_unique)){
for (i3 in 1:length(regions_unique)){
variance_test_regions   =   var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i)
}
}
write.xlsx2(variance_test_regions,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i],append=if(i>1){T}else{F})
}
if(i>1){T}else{F}
regions_unique=as.character(unique(data$region))
compounds=colnames(data)[11:ncol(data)]
for (i in 11:ncol(data)){
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
for (i2 in 1:length(regions_unique)){
for (i3 in 1:length(regions_unique)){
variance_test_regions   =   var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i)
}
}
write.xlsx2(variance_test_regions,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i],append=if(i>1){T}else{F})
}
regions_unique=as.character(unique(data$region))
compounds=colnames(data)[11:ncol(data)]
for (i in 11:ncol(data)){
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
for (i2 in 1:length(regions_unique)){
for (i3 in 1:length(regions_unique)){
variance_test_regions   =   var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i])
}
}
write.xlsx2(variance_test_regions,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i],append=if(i>1){T}else{F})
}
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
variance_test_regions   =   var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i])
write.xlsx2(variance_test_regions,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i],append=if(i>1){T}else{F})
variance_test_regions
str(variance_test_regions)
variance_test_regions
variance_test_regions$p.value
regions_unique=as.character(unique(data$region))
compounds=colnames(data)[11:ncol(data)]
for (i in 11:ncol(data)){
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
for (i2 in 1:length(regions_unique)){
for (i3 in 1:length(regions_unique)){
variance_test_regions   =   var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i])
p_value=variance_test_regions$p.value
}
}
write.xlsx2(variance_test_regions,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i],append=if(i>1){T}else{F})
}
regions_unique=as.character(unique(data$region))
compounds=colnames(data)[11:ncol(data)]
for (i in 11:ncol(data)){
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
for (i2 in 1:length(regions_unique)){
for (i3 in 1:length(regions_unique)){
temp   =   var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i])
variance_test_regions[i2,i3]=temp$p.value
}
}
write.xlsx2(p_value,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i],append=if(i>1){T}else{F})
}
regions_unique=as.character(unique(data$region))
compounds=colnames(data)[11:ncol(data)]
for (i in 11:ncol(data)){
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
for (i2 in 1:length(regions_unique)){
for (i3 in 1:length(regions_unique)){
temp   =   var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i])
variance_test_regions[i2,i3]=temp$p.value
}
}
write.xlsx2(variance_test_regions,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i],append=if(i>1){T}else{F})
}
ncol(data)
var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i])
data[data$region==regions_unique[i2],i]
data[data$region==regions_unique[i3],i]
?var.test
getOption("na.action")
regions_unique=as.character(unique(data$region))
compounds=colnames(data)[11:ncol(data)]
for (i in 11:ncol(data)){
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
for (i2 in 1:length(regions_unique)){
for (i3 in 1:length(regions_unique)){
temp   =   try(        var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i])        ,silent=TRUE)
if (inherits(model, "try-error")){
variance_test_regions[i2,i3]=NA
}else{
variance_test_regions[i2,i3]=temp$p.value
}
}
}
write.xlsx2(variance_test_regions,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i],append=if(i>1){T}else{F})
}
regions_unique=as.character(unique(data$region))
compounds=colnames(data)[11:ncol(data)]
for (i in 11:ncol(data)){
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
for (i2 in 1:length(regions_unique)){
for (i3 in 1:length(regions_unique)){
temp   =   try(        var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i])        ,silent=TRUE)
if (inherits(temp, "try-error")){
variance_test_regions[i2,i3]=NA
}else{
variance_test_regions[i2,i3]=temp$p.value
}
}
}
write.xlsx2(variance_test_regions,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i],append=if(i>1){T}else{F})
}
compounds
compounds
length(compounds)
length(unique(compounds))
regions_unique=as.character(unique(data$region))
compounds=colnames(data)[11:ncol(data)]
compounds
for (i in 11:ncol(data)){
variance_test_regions = as.data.frame(matrix(ncol = length(regions_unique), nrow = length(regions_unique)))
colnames(variance_test_regions)=regions_unique
rownames(variance_test_regions)=regions_unique
for (i2 in 1:length(regions_unique)){
for (i3 in 1:length(regions_unique)){
temp   =   try(        var.test(data[data$region==regions_unique[i2],i],data[data$region==regions_unique[i3],i])        ,silent=TRUE)
if (inherits(temp, "try-error")){
variance_test_regions[i2,i3]=NA
}else{
variance_test_regions[i2,i3]=temp$p.value
}
}
}
write.xlsx2(variance_test_regions,"milkST-for common paper_vers5/vartests.xlsx", sheetName=compounds[i-10],append=if(i>1){T}else{F})
}
compounds
# Anova.test: Voraussetzungen: Varianzhomogenitaet und Normalverteilung der Gruppen.Die Nullhypothese besagt demnach, dass zwischen den Mittelwert der Grundgesamtheit aus der die Werte stammen kein Unterschied besteht.
regions_unique=as.character(unique(data$region))
anova_all=data.frame()
for (i2 in 1:length(regions_unique)){
for (i3 in 11:ncol(data)){
temp3 = anova(  lm(       data[data$region==regions_unique[i2],i3]     )     )
anova_all[i2,i3-10] = temp3$`Pr(>F)`
}
}
colnames(anova_all)=colnames(data)[11:ncol(data)]
rownames(anova_all)=regions_unique
write.xlsx2(anova_all,"milkST-for common paper_vers5/anova_region.xlsx")
data$region
data$region
regions_unique=as.character(unique(data$region))
anova_all=data.frame()
regions = data$region
for (i2 in 1:length(regions_unique)){
for (i3 in 11:ncol(data)){
y = data[    regions==regions_unique[i2]     ,i3       ]
temp3 = anova(  lm(   y  ~  regions  )     )
anova_all[i2,i3-10] = temp3$`Pr(>F)`
}
}
anova_all=c()
regions = data$region
for (i3 in 11:ncol(data)){
y = data[         ,i3       ]
temp3 = anova(  lm(   y  ~  regions  )     )
anova_all[i3-10] = temp3$`Pr(>F)`
}
warnings()
i3=3
y = data[         ,i3       ]
y
data
View(data)
i3=11
y = data[         ,i3       ]
y
regions
anova(  lm(   y  ~  regions  )     )
temp3 = anova(  lm(   y  ~  regions  )     )
temp3$`Pr(>F)`
anova_all[i3-10] = temp3$`Pr(>F)`[1]
anova_all=c()
regions = data$region
for (i3 in 11:ncol(data)){
y = data[         ,i3       ]
temp3 = anova(  lm(   y  ~  regions  )     )
anova_all[i3-10] = temp3$`Pr(>F)`[1]
}
names(anova_all)=colnames(data)[11:ncol(data)]
write.xlsx2(anova_all,"milkST-for common paper_vers5/anova_region.xlsx")
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(SelectableRows)
fpath <- system.file("extdata", "www/css/styles.css", package="SelectableRows")
fpath
fpath <- system.file("inst", "www/css/styles.css", package="SelectableRows")
fpath
fpath <- system.file("inst", "/www/css/styles.css", package="SelectableRows")
fpath
fpath <- system.file("inst", "styles.css", package="SelectableRows")
fpath
fpath <- system.file("", "www/css/styles.css", package="SelectableRows")
fpath
ystem.file("www", "css/styles.css", package="SelectableRows")
system.file("www", "css/styles.css", package="SelectableRows")
library(SelectableRows)
